name: Main
on:
  push:
    branches:
      - main
permissions:
  contents: write
jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        dotnet: [ '8.x.x', '9.x.x' ]
    name: Dotnet ${{ matrix.dotnet }} on ${{ matrix.os }}.
    steps:
      - uses: actions/checkout@v4
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{matrix.dotnet}}
      - run: dotnet build
      - name: Create the package
        run: dotnet pack --configuration Release
      - name: Publish the package to Nuget
        run: dotnet nuget push UvaSoftware.Scanii/bin/Release/Uvasoftware.Scanii.*.nupkg -k ${NUGET_KEY} -s https://api.nuget.org/v3/index.json
        env: 
          NUGET_KEY: ${{ secrets.NUGET_KEY }}
      - name: Releasing
        run: |
          VERSION=$(cat UvaSoftware.Scanii/*.csproj | grep '<Version>' | awk -F '>|<' '{print $3}')
          echo "###################  using version: v$VERSION ###################"

          # tag repo
          git config --global user.email "ci@uvasoftware.com"
          git config --global user.name "Github Actions"
          git tag -a v"${VERSION}" -m "Release by Github Actions v${VERSION}"
          git push origin v"${VERSION}"
